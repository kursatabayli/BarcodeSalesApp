<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActiveLang" xml:space="preserve">
    <value>Active Language</value>
  </data>
  <data name="AddProduct" xml:space="preserve">
    <value>Add Product</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Barcode" xml:space="preserve">
    <value>Barcode</value>
  </data>
  <data name="BoxCount" xml:space="preserve">
    <value>Box Count</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CashOut" xml:space="preserve">
    <value>Cash Out</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ClearShortcutKey" xml:space="preserve">
    <value>Clear Shortcut</value>
  </data>
  <data name="CompleteSale" xml:space="preserve">
    <value>Complete Sale</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="CurrentClearShortcut" xml:space="preserve">
    <value>Clear Shortcut:</value>
  </data>
  <data name="CurrentSaleShortcut" xml:space="preserve">
    <value>Sale Shortcut:</value>
  </data>
  <data name="DayMode" xml:space="preserve">
    <value>Light Mode</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteProductConfirmText" xml:space="preserve">
    <value>Delete product?</value>
  </data>
  <data name="DeleteProductError" xml:space="preserve">
    <value>An error occurred during the deletion process</value>
  </data>
  <data name="DeleteProductSuccess" xml:space="preserve">
    <value>Product successfully deleted!</value>
  </data>
  <data name="DeleteProductTitle" xml:space="preserve">
    <value>Delete Product: {0}</value>
  </data>
  <data name="EditShortcuts" xml:space="preserve">
    <value>Edit Shortcuts</value>
  </data>
  <data name="EndOfDayReport" xml:space="preserve">
    <value>End Of Day Report</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="EnterStock" xml:space="preserve">
    <value>Enter Stock</value>
  </data>
  <data name="IncomingBoxAmount" xml:space="preserve">
    <value>Incoming Box Amount</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="NewProduct" xml:space="preserve">
    <value>New Product Added!</value>
  </data>
  <data name="NightMode" xml:space="preserve">
    <value>Dark Mode</value>
  </data>
  <data name="NoClearShortcut" xml:space="preserve">
    <value>No Shortcut for Clear Operation Found!</value>
  </data>
  <data name="NoSalesFound" xml:space="preserve">
    <value>No Sales Found</value>
  </data>
  <data name="NoSaleShortcut" xml:space="preserve">
    <value>No Shortcut for Sale Operation Found!</value>
  </data>
  <data name="ProductDetail" xml:space="preserve">
    <value>Product Detail</value>
  </data>
  <data name="ProductExists" xml:space="preserve">
    <value>The product registered with this barcode ({0}) is: {1}</value>
  </data>
  <data name="ProductInBox" xml:space="preserve">
    <value>Items per Box</value>
  </data>
  <data name="ProductInfo" xml:space="preserve">
    <value>Product Information</value>
  </data>
  <data name="ProductList" xml:space="preserve">
    <value>Product List</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>ProductName</value>
  </data>
  <data name="ProductUpdated" xml:space="preserve">
    <value>Product Updated!</value>
  </data>
  <data name="Profit" xml:space="preserve">
    <value>Profit</value>
  </data>
  <data name="PurchasePrice" xml:space="preserve">
    <value>Purchase Price</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="QuantitySold" xml:space="preserve">
    <value>Quantity Sold</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="ResetKeys" xml:space="preserve">
    <value>Reset to Default</value>
  </data>
  <data name="ResetShortcutConfirmText" xml:space="preserve">
    <value>Are you sure you want to clear the shortcuts?</value>
  </data>
  <data name="ResetShortcutError" xml:space="preserve">
    <value>An error occurred during the reset process</value>
  </data>
  <data name="ResetShortcutSuccess" xml:space="preserve">
    <value>Shortcuts successfully reset!</value>
  </data>
  <data name="ResetShortcutTitle" xml:space="preserve">
    <value>Clear Shortcuts</value>
  </data>
  <data name="ResetStock" xml:space="preserve">
    <value>Reset Stock</value>
  </data>
  <data name="ResetStockConfirmText" xml:space="preserve">
    <value>Are you sure you want to reset this product's stock?</value>
  </data>
  <data name="ResetStockError" xml:space="preserve">
    <value>An error occurred during the reset process</value>
  </data>
  <data name="ResetStockSuccess" xml:space="preserve">
    <value>Stock successfully reset!</value>
  </data>
  <data name="ResetStockTitle" xml:space="preserve">
    <value>Reset Stock</value>
  </data>
  <data name="RowsPerPage" xml:space="preserve">
    <value>Rows Per Page</value>
  </data>
  <data name="SaleAmount" xml:space="preserve">
    <value>Sale Amount</value>
  </data>
  <data name="SalePrice" xml:space="preserve">
    <value>Sale Price</value>
  </data>
  <data name="Sales" xml:space="preserve">
    <value>Sales</value>
  </data>
  <data name="SaleShortcutKey" xml:space="preserve">
    <value>Sale Shortcut Key</value>
  </data>
  <data name="SalesList" xml:space="preserve">
    <value>Sales List</value>
  </data>
  <data name="SalesPage" xml:space="preserve">
    <value>Sales Page</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ScanBarcode" xml:space="preserve">
    <value>Scan Barcode:</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search...</value>
  </data>
  <data name="SelectDate" xml:space="preserve">
    <value>Select Date</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SortBy" xml:space="preserve">
    <value>Sort By</value>
  </data>
  <data name="StockInfo" xml:space="preserve">
    <value>Stock Information</value>
  </data>
  <data name="StockMultiplier" xml:space="preserve">
    <value>Units per Box</value>
  </data>
  <data name="StockUnit" xml:space="preserve">
    <value>Stock Unit</value>
  </data>
  <data name="StockUnitCount" xml:space="preserve">
    <value>Stock Unit Count</value>
  </data>
  <data name="StockUpdate" xml:space="preserve">
    <value>Stock Update</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Barcode Sales</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TotalProfit" xml:space="preserve">
    <value>Total Profit</value>
  </data>
  <data name="TotalSales" xml:space="preserve">
    <value>Total Sales</value>
  </data>
  <data name="TotalStock" xml:space="preserve">
    <value>Total Stock</value>
  </data>
  <data name="TotalStockQuantity" xml:space="preserve">
    <value>Total Stock Quantity</value>
  </data>
  <data name="Turkish" xml:space="preserve">
    <value>Turkish</value>
  </data>
  <data name="UnitPrice" xml:space="preserve">
    <value>Unit Price</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UpdateProduct" xml:space="preserve">
    <value>Update Product</value>
  </data>
  <data name="UpdateShortcutSuccess" xml:space="preserve">
    <value>Shortcuts Updated!</value>
  </data>
  <data name="UpdateStockSuccess" xml:space="preserve">
    <value>Stock Updated!</value>
  </data>
  <data name="ViewDetails" xml:space="preserve">
    <value>View Details</value>
  </data>
</root>